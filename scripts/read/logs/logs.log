INFO:root:Conexión establecida con MySQL
INFO:root:Ejecutando querie: DROP TABLE IF EXISTS info_transacciones_persona_fraude
INFO:root:Ejecutando querie: CREATE TABLE IF NOT exists info_transacciones_persona_fraude ( WITH t1 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, Account2 as destinario, SUM(Amount_Received) as dinero_enviado, count(*) as cantidad_envios FROM Dataorigin WHERE Is_Laundering = 1  GROUP BY Account, Account2, Month(Time), day(Time) ), t2 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, SUM(Amount_Paid) as dinero_enviado_canales, count(*) as cantidad_envios_totales FROM Dataorigin GROUP BY Account, Month(Time), day(Time) ) SELECT  	DISTINCT 	year(now()) as anio, 	t1.mes,  	t1.dia,      t1.originario,      t1.destinario,      t1.dinero_enviado AS dinero_enviado_orig_dest,     	CASE WHEN t2.dinero_enviado_canales = 0 THEN 1 	ELSE t1.dinero_enviado/t2.dinero_enviado_canales END AS ptge_enviado_orig_dest,     t1.cantidad_envios as numero_envios_orig_dest,     CASE WHEN t2.cantidad_envios_totales = 0 THEN 1     ELSE t1.cantidad_envios/t2.cantidad_envios_totales END AS ptge_envios_orig_dest FROM t1  INNER JOIN t2 ON t1.mes = t2.mes AND t1.dia = t1.dia AND t1.originario = t2.originario )
INFO:root:Ejecutando querie: DROP TABLE IF exists info_transacciones_consolid_fraud
INFO:root:Ejecutando querie: CREATE TABLE IF NOT exists info_transacciones_consolid_fraud ( WITH t1 as( select  anio, mes, dia, originario, SUM(dinero_enviado_orig_dest) as dinero_total_env, SUM(numero_envios_orig_dest) as cantidad_total_env from info_transacciones_persona_fraude GROUP BY originario, anio, mes, dia ), t2 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, SUM(Amount_Paid) as dinero_enviado_canales, count(*) as cantidad_envios_totales FROM Dataorigin GROUP BY Account, Month(Time), day(Time) ) SELECT      DISTINCT 	year(now()) as anio, 	t1.mes,  	t1.dia,      t1.originario,      t1.dinero_total_env AS dinero_total_env,     CASE WHEN t2.dinero_enviado_canales = 0 THEN 1     ELSE t1.dinero_total_env/t2.dinero_enviado_canales END as ptge_enviado_orig,     t1.cantidad_total_env as numero_envios_orig_dest,     CASE WHEN t2.cantidad_envios_totales = 0 THEN 1     ELSE t1.cantidad_total_env/t2.cantidad_envios_totales END as ptge_envios_orig FROM t1  INNER JOIN t2 ON t1.mes = t2.mes AND t1.dia = t1.dia AND t1.originario = t2.originario )
INFO:root:Cerrando conexion
2024-04-08 20:25:23,346 INFO: Conexión establecida con MySQL
2024-04-08 20:25:23,347 INFO: Ejecutando querie: DROP TABLE IF EXISTS info_transacciones_persona_fraude
2024-04-08 20:25:23,651 INFO: Ejecutando querie: CREATE TABLE IF NOT exists info_transacciones_persona_fraude ( WITH t1 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, Account2 as destinario, SUM(Amount_Received) as dinero_enviado, count(*) as cantidad_envios FROM Dataorigin WHERE Is_Laundering = 1  GROUP BY Account, Account2, Month(Time), day(Time) ), t2 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, SUM(Amount_Paid) as dinero_enviado_canales, count(*) as cantidad_envios_totales FROM Dataorigin GROUP BY Account, Month(Time), day(Time) ) SELECT  	DISTINCT 	year(now()) as anio, 	t1.mes,  	t1.dia,      t1.originario,      t1.destinario,      t1.dinero_enviado AS dinero_enviado_orig_dest,     	CASE WHEN t2.dinero_enviado_canales = 0 THEN 1 	ELSE t1.dinero_enviado/t2.dinero_enviado_canales END AS ptge_enviado_orig_dest,     t1.cantidad_envios as numero_envios_orig_dest,     CASE WHEN t2.cantidad_envios_totales = 0 THEN 1     ELSE t1.cantidad_envios/t2.cantidad_envios_totales END AS ptge_envios_orig_dest FROM t1  INNER JOIN t2 ON t1.mes = t2.mes AND t1.dia = t1.dia AND t1.originario = t2.originario )
2024-04-08 20:25:38,081 INFO: Ejecutando querie: DROP TABLE IF exists info_transacciones_consolid_fraud
2024-04-08 20:25:38,310 INFO: Ejecutando querie: CREATE TABLE IF NOT exists info_transacciones_consolid_fraud ( WITH t1 as( select  anio, mes, dia, originario, SUM(dinero_enviado_orig_dest) as dinero_total_env, SUM(numero_envios_orig_dest) as cantidad_total_env from info_transacciones_persona_fraude GROUP BY originario, anio, mes, dia ), t2 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, SUM(Amount_Paid) as dinero_enviado_canales, count(*) as cantidad_envios_totales FROM Dataorigin GROUP BY Account, Month(Time), day(Time) ) SELECT      DISTINCT 	year(now()) as anio, 	t1.mes,  	t1.dia,      t1.originario,      t1.dinero_total_env AS dinero_total_env,     CASE WHEN t2.dinero_enviado_canales = 0 THEN 1     ELSE t1.dinero_total_env/t2.dinero_enviado_canales END as ptge_enviado_orig,     t1.cantidad_total_env as numero_envios_orig_dest,     CASE WHEN t2.cantidad_envios_totales = 0 THEN 1     ELSE t1.cantidad_total_env/t2.cantidad_envios_totales END as ptge_envios_orig FROM t1  INNER JOIN t2 ON t1.mes = t2.mes AND t1.dia = t1.dia AND t1.originario = t2.originario )
2024-04-08 20:25:51,972 INFO: Ejecutando prueba de duplicados
2024-04-08 20:25:54,431 INFO: Prueba duplicados completada: info_transacciones_persona_fraude
2024-04-08 20:25:54,431 INFO: Ejecutando prueba de duplicados
2024-04-08 20:25:54,924 INFO: Prueba duplicados completada: info_transacciones_consolid_fraud
2024-04-08 20:25:57,607 INFO: Prueba de nulidad completada: info_transacciones_persona_fraude
2024-04-08 20:26:00,076 INFO: Prueba de nulidad completada: info_transacciones_consolid_fraud
2024-04-08 20:26:02,856 INFO: Prueba de nulidad completada: info_transacciones_persona_fraude
2024-04-08 20:26:05,274 INFO: Prueba de nulidad completada: info_transacciones_consolid_fraud
2024-04-08 20:26:05,275 INFO: Cerrando conexion
2024-04-08 23:45:08,578 INFO: Conexión establecida con MySQL
2024-04-08 23:45:08,584 INFO: Ejecutando querie: DROP TABLE IF EXISTS info_transacciones_persona_fraude
2024-04-08 23:45:08,852 INFO: Ejecutando querie: CREATE TABLE IF NOT exists info_transacciones_persona_fraude ( WITH t1 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, Account2 as destinario, SUM(Amount_Received) as dinero_enviado, count(*) as cantidad_envios FROM Dataorigin WHERE Is_Laundering = 1  GROUP BY Account, Account2, Month(Time), day(Time) ), t2 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, SUM(Amount_Paid) as dinero_enviado_canales, count(*) as cantidad_envios_totales FROM Dataorigin GROUP BY Account, Month(Time), day(Time) ) SELECT  	DISTINCT 	year(now()) as anio, 	t1.mes,  	t1.dia,      t1.originario,      t1.destinario,      t1.dinero_enviado AS dinero_enviado_orig_dest,     	CASE WHEN t2.dinero_enviado_canales = 0 THEN 1 	ELSE t1.dinero_enviado/t2.dinero_enviado_canales END AS ptge_enviado_orig_dest,     t1.cantidad_envios as numero_envios_orig_dest,     CASE WHEN t2.cantidad_envios_totales = 0 THEN 1     ELSE t1.cantidad_envios/t2.cantidad_envios_totales END AS ptge_envios_orig_dest FROM t1  INNER JOIN t2 ON t1.mes = t2.mes AND t1.dia = t1.dia AND t1.originario = t2.originario )
2024-04-08 23:45:26,276 INFO: Ejecutando querie: DROP TABLE IF exists info_transacciones_consolid_fraud
2024-04-08 23:45:26,514 INFO: Ejecutando querie: CREATE TABLE IF NOT exists info_transacciones_consolid_fraud ( WITH t1 as( select  anio, mes, dia, originario, SUM(dinero_enviado_orig_dest) as dinero_total_env, SUM(numero_envios_orig_dest) as cantidad_total_env from info_transacciones_persona_fraude GROUP BY originario, anio, mes, dia ), t2 as ( SELECT Month(Time) as mes, day(Time) as dia, Account as originario, SUM(Amount_Paid) as dinero_enviado_canales, count(*) as cantidad_envios_totales FROM Dataorigin GROUP BY Account, Month(Time), day(Time) ) SELECT      DISTINCT 	year(now()) as anio, 	t1.mes,  	t1.dia,      t1.originario,      t1.dinero_total_env AS dinero_total_env,     CASE WHEN t2.dinero_enviado_canales = 0 THEN 1     ELSE t1.dinero_total_env/t2.dinero_enviado_canales END as ptge_enviado_orig,     t1.cantidad_total_env as numero_envios_orig_dest,     CASE WHEN t2.cantidad_envios_totales = 0 THEN 1     ELSE t1.cantidad_total_env/t2.cantidad_envios_totales END as ptge_envios_orig FROM t1  INNER JOIN t2 ON t1.mes = t2.mes AND t1.dia = t1.dia AND t1.originario = t2.originario )
2024-04-08 23:45:40,472 INFO: Ejecutando prueba de duplicados
2024-04-08 23:45:43,098 INFO: Prueba duplicados completada: info_transacciones_persona_fraude
2024-04-08 23:45:43,098 INFO: Ejecutando prueba de duplicados
2024-04-08 23:45:43,583 INFO: Prueba duplicados completada: info_transacciones_consolid_fraud
2024-04-08 23:45:46,430 INFO: Prueba de nulidad completada: info_transacciones_persona_fraude
2024-04-08 23:45:48,977 INFO: Prueba de nulidad completada: info_transacciones_consolid_fraud
2024-04-08 23:45:51,867 INFO: Prueba de nulidad completada: info_transacciones_persona_fraude
2024-04-08 23:45:54,401 INFO: Prueba de nulidad completada: info_transacciones_consolid_fraud
2024-04-08 23:45:54,402 INFO: Cerrando conexion
